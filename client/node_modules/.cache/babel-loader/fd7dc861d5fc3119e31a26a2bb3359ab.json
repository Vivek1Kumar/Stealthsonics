{"ast":null,"code":"import _classCallCheck from \"/home/tech/Downloads/newCode/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tech/Downloads/newCode/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tech/Downloads/newCode/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tech/Downloads/newCode/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tech/Downloads/newCode/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tech/Downloads/newCode/src/components/payments/Payments.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { userPayments } from '../../actions/authAction';\nimport { withRouter } from 'react-router-dom';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport PayImage from '../../assets/image/btn_buynowCC_LG.gif';\nimport scriptLoader from 'react-async-script-loader';\nimport ReactDOM from 'react-dom'; // import scriptLoader from 'react-async-script-loader';\n// import PropTypes from 'prop-types';\n\nvar Payments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Payments, _Component);\n\n  function Payments(props) {\n    var _this;\n\n    _classCallCheck(this, Payments);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Payments).call(this, props));\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n    _this.state = {\n      showButton: false,\n      env: 'sandbox',\n      // Or 'sandbox'\n      client: {\n        sandbox: 'AQTxY9TnJ0Dc6kty0QYDBXlMn-k_Fxy9ppriWc-Ks1m3oLqGNgPN7KMwUW8bj2yahCol_embJa3jr87Q',\n        // sandbox client ID\n        production: 'AQTxY9TnJ0Dc6kty0QYDBXlMn-k_Fxy9ppriWc-Ks1m3oLqGNgPN7KMwUW8bj2yahCol_embJa3jr87Q' // production client ID\n        //'client_id': 'AfPa2JGqfMYIwoEvB2hFHqNCRiwT8-1SUbQGXT9PxH4Cf5gm4c6ms0GZnpBtckmv3dgsN_-OVPZt0U2i',\n        //'client_secret': 'EA49HIg-l9pyL0n-GSNTnpmxTF94ynfqrt3-xROKJ5DaOdL880Vpoii8I4_EMHGF_JdBvQAWuxYnMTNk'\n\n      },\n      commit: true // Show a 'Pay Now' button\n\n    };\n    return _this;\n  }\n\n  _createClass(Payments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          isScriptLoaded = _this$props.isScriptLoaded,\n          isScriptLoadSucceed = _this$props.isScriptLoadSucceed;\n\n      if (isScriptLoaded && isScriptLoadSucceed) {\n        this.setState({\n          showButton: true\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref) {\n      var isScriptLoaded = _ref.isScriptLoaded,\n          isScriptLoadSucceed = _ref.isScriptLoadSucceed;\n\n      if (!this.state.show) {\n        if (isScriptLoaded && !this.props.isScriptLoaded) {\n          if (isScriptLoadSucceed) {\n            this.setState({\n              showButton: true\n            });\n          } else {\n            console.log('Cannot load Paypal script!');\n            this.props.onError();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var payment = function payment() {\n        return paypal.rest.payment.create(_this2.props.env, _this2.props.client, {\n          transactions: [{\n            amount: {\n              total: _this2.props.total,\n              currency: _this2.props.currency\n            }\n          }]\n        });\n      };\n\n      var onAuthorize = function onAuthorize(data, actions) {\n        return actions.payment.execute().then(function () {\n          var payment = Object.assign({}, _this2.props.payment);\n          payment.paid = true;\n          payment.cancelled = false;\n          payment.payerID = data.payerID;\n          payment.paymentID = data.paymentID;\n          payment.paymentToken = data.paymentToken;\n          payment.returnUrl = data.returnUrl;\n\n          _this2.props.onSuccess(payment);\n        });\n      };\n\n      var ppbtn = '';\n\n      if (this.state.showButton) {\n        ppbtn = React.createElement(paypal.Button.react, {\n          env: this.state.env,\n          client: this.state.client,\n          payment: payment,\n          commit: true,\n          onAuthorize: onAuthorize,\n          onCancel: this.props.onCancel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, ppbtn);\n    }\n  }]);\n\n  return Payments;\n}(Component);\n\nPayments.propTypes = {\n  currency: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  client: PropTypes.object.isRequired\n};\nPayments.defaultProps = {\n  env: 'sandbox',\n  onSuccess: function onSuccess(payment) {\n    console.log('The payment was succeeded!', payment);\n  },\n  onCancel: function onCancel(data) {\n    console.log('The payment was cancelled!', data);\n  },\n  onError: function onError(err) {\n    console.log('Error loading Paypal script!', err);\n  }\n}; //   constructor() {  \n//     super();\n//     this.state= {\n//       name: '',\n//     //   email: '',\n//     //   password: '',\n//     //   password2: '',  \n//     //   errors: {}\n//     };\n//     this.onChange = this.onChange.bind(this);\n//     this.onSubmit = this.onSubmit.bind(this);\n//   }\n//   componentWillReceiveProps(nextProps){\n//     if(nextProps.errors){\n//       this.setState({errors: nextProps.errors})\n//     }\n//   }\n//   onSubmit(e){\n//     e.preventDefault();\n//     const userPay = {\n//       name: this.state.name,      \n//     }; \n//     console.log(userPay); \n//     this.props.userPayments(userPay, this.props.history);\n//     }\n//   onChange(e){\n//     this.setState({ [e.target.name]: e.target.value});\n//   }\n//   render(){\n//     const { errors } = this.state;\n//     return (\n//       <div>\n//       <div className=\"container-fluid\">\n//           <div className=\"banner-section\">\n//               <div className=\"banner-title\">\n//                   <h1>Now, You can pay</h1>\n//               </div>\n//           </div>\n//       </div>\n//       <form>\n//       <TextFieldGroup\n//             placeholder=\"Name\"\n//             name=\"name\"\n//             type=\"name\"\n//             value={this.state.name}\n//             onChange={this.onChange}\n//             // error={errors.name}\n//             />\n//             <input type=\"submit\" className=\"btn btn-info\" />\n//       </form>\n//       </div>\n//     );\n//   }\n// } \n// Payments.propTypes = {\n//   userPayments: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired,\n//   errors: PropTypes.object.isRequired\n// };\n// const mapStateToProps = state => ({\n//   auth: state.auth,\n//   errors: state.errors\n// })\n\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(Payments); // export default connect(mapStateToProps, {userPayments})(withRouter(Payments));\n// import React, { Component } from 'react';\n// import StripeCheckout from 'react-stripe-checkout';\n// import { userInfo } from 'os';\n// import { logoutUser } from '../../actions/authAction';\n// import { clearCurrentProfile } from '../../actions/profileActions';\n// import PayImage  from '../../assets/image/btn_buynowCC_LG.gif';\n// class Payments extends Component {\n//     render() {\n//         return(\n//             <div>\n//                 <form>\n//                     <div className=\"btn\"><img src={PayImage} alt=\"paypal payment method\" /></div>\n//                 </form>\n//             </div>\n//         //     <StripeCheckout\n//         //         name=\"Vivek\"\n//         //         description=\"You can pay now\"\n//         //         amount={500}\n//         //         token={token => console.log(token)}\n//         //         stripeKey={process.env.REACT_APP_STRIPE_KEY}\n//         //     >\n//         //    <a herf=\"/success\"> <div className=\"btn  btn-info mt-4\">Buy by Card</div> </a> \n//         //     </StripeCheckout>\n//         )\n//     }\n// }\n// export default Payments;","map":{"version":3,"sources":["/home/tech/Downloads/newCode/src/components/payments/Payments.js"],"names":["React","Component","PropTypes","connect","userPayments","withRouter","TextFieldGroup","PayImage","scriptLoader","ReactDOM","Payments","props","window","state","showButton","env","client","sandbox","production","commit","isScriptLoaded","isScriptLoadSucceed","setState","show","console","log","onError","payment","paypal","rest","create","transactions","amount","total","currency","onAuthorize","data","actions","execute","then","Object","assign","paid","cancelled","payerID","paymentID","paymentToken","returnUrl","onSuccess","ppbtn","onCancel","propTypes","string","isRequired","number","object","defaultProps","err"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { userPayments } from '../../actions/authAction';  \nimport { withRouter } from 'react-router-dom';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport PayImage  from '../../assets/image/btn_buynowCC_LG.gif';\nimport scriptLoader from 'react-async-script-loader';\n\nimport ReactDOM from 'react-dom';\n// import scriptLoader from 'react-async-script-loader';\n// import PropTypes from 'prop-types';\n\nclass Payments extends Component {\n  constructor(props) {\n    super(props);\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n    this.state = {\n      showButton: false,\n      env: 'sandbox', // Or 'sandbox'\n      client: {\n         sandbox:    'AQTxY9TnJ0Dc6kty0QYDBXlMn-k_Fxy9ppriWc-Ks1m3oLqGNgPN7KMwUW8bj2yahCol_embJa3jr87Q', // sandbox client ID\n         production: 'AQTxY9TnJ0Dc6kty0QYDBXlMn-k_Fxy9ppriWc-Ks1m3oLqGNgPN7KMwUW8bj2yahCol_embJa3jr87Q' // production client ID\n        //'client_id': 'AfPa2JGqfMYIwoEvB2hFHqNCRiwT8-1SUbQGXT9PxH4Cf5gm4c6ms0GZnpBtckmv3dgsN_-OVPZt0U2i',\n        //'client_secret': 'EA49HIg-l9pyL0n-GSNTnpmxTF94ynfqrt3-xROKJ5DaOdL880Vpoii8I4_EMHGF_JdBvQAWuxYnMTNk'\n      },\n      commit: true, // Show a 'Pay Now' button\n    };\n  }\n  componentDidMount() {\n    const { isScriptLoaded, isScriptLoadSucceed } = this.props;\n    if (isScriptLoaded && isScriptLoadSucceed) {\n      this.setState({ showButton: true });\n    }\n  }\n  componentWillReceiveProps({ isScriptLoaded, isScriptLoadSucceed }) {\n    if (!this.state.show) {\n      if (isScriptLoaded && !this.props.isScriptLoaded) {\n        if (isScriptLoadSucceed) {\n          this.setState({ showButton: true });\n        } else {\n          console.log('Cannot load Paypal script!');\n          this.props.onError();\n        }\n      }\n    }\n  }\n \n  render() {\n    const payment = () => paypal.rest.payment.create(this.props.env, this.props.client, {\n      transactions: [\n                    { amount: { total: this.props.total, currency: this.props.currency } },\n      ],\n    });\n \n    const onAuthorize = (data, actions) => actions.payment.execute().then(() => {\n      const payment = Object.assign({}, this.props.payment);\n      payment.paid = true;\n      payment.cancelled = false;\n      payment.payerID = data.payerID;\n      payment.paymentID = data.paymentID;\n      payment.paymentToken = data.paymentToken;\n      payment.returnUrl = data.returnUrl;\n      this.props.onSuccess(payment);\n    });\n \n    let ppbtn = '';\n    if (this.state.showButton) {\n      ppbtn = (<paypal.Button.react\n        env={this.state.env}\n        client={this.state.client}\n        payment={payment}\n        commit\n        onAuthorize={onAuthorize}\n        onCancel={this.props.onCancel}\n      />);\n    }\n    return <div>{ppbtn}</div>;\n  }\n}\n \nPayments.propTypes = {\n  currency: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  client: PropTypes.object.isRequired,\n};\n \nPayments.defaultProps = {\n  env: 'sandbox',\n  onSuccess: (payment) => {\n    console.log('The payment was succeeded!', payment);\n  },\n  onCancel: (data) => {\n    console.log('The payment was cancelled!', data);\n  },\n  onError: (err) => {\n    console.log('Error loading Paypal script!', err);\n  },\n};\n//   constructor() {  \n//     super();\n//     this.state= {\n//       name: '',\n//     //   email: '',\n//     //   password: '',\n//     //   password2: '',  \n//     //   errors: {}\n//     };\n//     this.onChange = this.onChange.bind(this);\n//     this.onSubmit = this.onSubmit.bind(this);\n//   }\n//   componentWillReceiveProps(nextProps){\n//     if(nextProps.errors){\n//       this.setState({errors: nextProps.errors})\n//     }\n//   }\n//   onSubmit(e){\n//     e.preventDefault();\n//     const userPay = {\n//       name: this.state.name,      \n//     }; \n//     console.log(userPay); \n//     this.props.userPayments(userPay, this.props.history);\n   \n//     }\n//   onChange(e){\n//     this.setState({ [e.target.name]: e.target.value});\n//   }\n//   render(){\n//     const { errors } = this.state;\n\n//     return (\n//       <div>\n//       <div className=\"container-fluid\">\n//           <div className=\"banner-section\">\n//               <div className=\"banner-title\">\n//                   <h1>Now, You can pay</h1>\n//               </div>\n//           </div>\n\n//       </div>\n//       <form>\n//       <TextFieldGroup\n//             placeholder=\"Name\"\n//             name=\"name\"\n//             type=\"name\"\n//             value={this.state.name}\n//             onChange={this.onChange}\n//             // error={errors.name}\n//             />\n//             <input type=\"submit\" className=\"btn btn-info\" />\n//       </form>\n      \n//       </div>\n//     );\n//   }\n// } \n// Payments.propTypes = {\n//   userPayments: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired,\n//   errors: PropTypes.object.isRequired\n// };\n\n// const mapStateToProps = state => ({\n//   auth: state.auth,\n//   errors: state.errors\n// })\n\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(Payments);\n// export default connect(mapStateToProps, {userPayments})(withRouter(Payments));\n\n// import React, { Component } from 'react';\n\n// import StripeCheckout from 'react-stripe-checkout';\n// import { userInfo } from 'os';\n// import { logoutUser } from '../../actions/authAction';\n// import { clearCurrentProfile } from '../../actions/profileActions';\n// import PayImage  from '../../assets/image/btn_buynowCC_LG.gif';\n\n// class Payments extends Component {\n//     render() {\n       \n//         return(\n//             <div>\n            \n//                 <form>\n                    \n//                     <div className=\"btn\"><img src={PayImage} alt=\"paypal payment method\" /></div>\n//                 </form>\n//             </div>\n//         //     <StripeCheckout\n//         //         name=\"Vivek\"\n//         //         description=\"You can pay now\"\n//         //         amount={500}\n//         //         token={token => console.log(token)}\n//         //         stripeKey={process.env.REACT_APP_STRIPE_KEY}\n//         //     >\n//         //    <a herf=\"/success\"> <div className=\"btn  btn-info mt-4\">Buy by Card</div> </a> \n//         //     </StripeCheckout>\n//         )\n//     }\n// }\n// export default Payments;"]},"metadata":{},"sourceType":"module"}