{"ast":null,"code":"import _classCallCheck from \"/home/tech/Downloads/newCode/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tech/Downloads/newCode/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/tech/Downloads/newCode/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/tech/Downloads/newCode/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/tech/Downloads/newCode/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tech/Downloads/newCode/src/components/payments/Payments.js\";\n// import React, { Component, PropTypes } from 'react'\n// import ReactDOM from 'react-dom'\n// import { connect } from 'react-redux'\n// import {scriptLoader, paypal} from 'react-async-script-loader'\n// //import { paymentAuthorized, paymentCancelled } from '../../actions'\n// class PayPalButton extends Component {\n//   constructor(props) {\n//     super(props)\n//     window.React = React\n//     window.ReactDOM = ReactDOM\n//     this.state = {\n//       showButton: false,\n//     }\n//   }\n//   componentWillReceiveProps ({ isScriptLoaded, isScriptLoadSucceed }) {\n//     if (!this.state.show) {\n//       if (isScriptLoaded && !this.props.isScriptLoaded) { // load finished\n//         if (isScriptLoadSucceed) {\n//           this.setState({ showButton: true })\n//           console.log('alehop!!', window.paypal.Button.react)\n//         }\n//         else this.props.onError()\n//       }\n//     }\n//   }\n//   componentDidMount () {\n//     const { isScriptLoaded, isScriptLoadSucceed } = this.props\n//     if (isScriptLoaded && isScriptLoadSucceed) {\n//       this.setState({ showButton: true })\n//     }\n//   }\n//   componentWillUnmount() {\n//     delete window.React\n//     delete window.ReactDOM\n//   }\n//   render() {\n//     const client = {\n//       sandbox:    'xxxxxx',\n//       production: 'xxxxxx',\n//     }\n//     const payment = () => {\n//       return paypal.rest.payment.create('sandbox', client,\n//         {\n//           transactions: [\n//             { amount: { total: '1.00', currency: 'USD' } },\n//           ],\n//         },\n//       )\n//     }\n//     const onAuthorize = (data, actions) => {\n//       return actions.payment.execute().then(() => {\n//         console.log('The payment was completed!', this)\n//         this.setState({ showButton: false })\n//         const payment = Object.assign({}, this.props.payment)\n//         payment.paid = true\n//         payment.cancelled =  false\n//         payment.payerID =  data.payerID\n//         payment.paymentID =  data.paymentID\n//         payment.paymentToken =  data.paymentToken\n//         payment.returnUrl =  data.returnUrl\n//         this.props.dispatch(paymentAuthorized(payment))\n//       })\n//     }\n//     const onCancel = (data) => {\n//       console.log('The payment was cancelled!', data)\n//       this.props.dispatch(paymentCancelled())\n//     }\n//     return (\n//       <PayPalButton condition={this.state.showButton}>\n//         <paypal.Button.react\n//           env={'sandbox'}\n//           client={client}\n//           payment={payment}\n//           commit={true}\n//           onAuthorize={onAuthorize}\n//           onCancel={onCancel}\n//         />\n//       </PayPalButton>\n//     )\n//   }\n// }\n// const selector = (appState) => ({\n//   payment: appState.payment,\n// })\n// const PayPalButtonRedux = connect(selector)(PayPalButton)\n// export default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PayPalButtonRedux)\n// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { userPayments } from '../../actions/authAction';  \n// import { withRouter } from 'react-router-dom';\n// import TextFieldGroup from '../common/TextFieldGroup';\n// import PayImage  from '../../assets/image/btn_buynowCC_LG.gif';\n// import {scriptLoader, paypal} from 'react-async-script-loader';\n// import ReactDOM from 'react-dom';\n// // import scriptLoader from 'react-async-script-loader';\n// // import PropTypes from 'prop-types';\n// class Payments extends Component {\n//   constructor(props) {\n//     super(props);\n//     window.React = React;\n//     window.ReactDOM = ReactDOM;\n//     this.state = {\n//       showButton: false,\n//       env: 'sandbox', // Or 'sandbox'\n//       client: {\n//          sandbox:    'vivekyadav264-facilitator@gmail.com', // sandbox client ID\n//          production: 'AQTxY9TnJ0Dc6kty0QYDBXlMn-k_Fxy9ppriWc-Ks1m3oLqGNgPN7KMwUW8bj2yahCol_embJa3jr87Q' // production client ID\n//         //'client_id': 'AfPa2JGqfMYIwoEvB2hFHqNCRiwT8-1SUbQGXT9PxH4Cf5gm4c6ms0GZnpBtckmv3dgsN_-OVPZt0U2i',\n//         //'client_secret': 'EA49HIg-l9pyL0n-GSNTnpmxTF94ynfqrt3-xROKJ5DaOdL880Vpoii8I4_EMHGF_JdBvQAWuxYnMTNk'\n//       },\n//       commit: true, // Show a 'Pay Now' button\n//     };\n//   }\n//   componentDidMount() {\n//     const { isScriptLoaded, isScriptLoadSucceed } = this.props;\n//     if (isScriptLoaded && isScriptLoadSucceed) {\n//       this.setState({ showButton: true });\n//     }\n//   }\n//   componentWillReceiveProps({ isScriptLoaded, isScriptLoadSucceed }) {\n//     if (!this.state.show) {\n//       if (isScriptLoaded && !this.props.isScriptLoaded) {\n//         if (isScriptLoadSucceed) {\n//           this.setState({ showButton: true });\n//         } else {\n//           console.log('Cannot load Paypal script!');\n//           this.props.onError();\n//         }\n//       }\n//     }\n//   }\n//   render() {\n//     const payment = () => paypal.rest.payment.create(this.props.env, this.props.client, {\n//       transactions: [\n//                     { amount: { total: this.props.total, currency: this.props.currency } },\n//       ],\n//     });\n//     const onAuthorize = (data, actions) => actions.payment.execute().then(() => {\n//       const payment = Object.assign({}, this.props.payment);\n//       payment.paid = true;\n//       payment.cancelled = false;\n//       payment.payerID = data.payerID;\n//       payment.paymentID = data.paymentID;\n//       payment.paymentToken = data.paymentToken;\n//       payment.returnUrl = data.returnUrl;\n//       this.props.onSuccess(payment);\n//     });\n//     let ppbtn = '';\n//     if (this.state.showButton) {\n//       ppbtn = (<paypal.Button.react\n//         env={this.state.env}\n//         client={this.state.client}\n//         payment={payment}\n//         commit\n//         onAuthorize={onAuthorize}\n//         onCancel={this.props.onCancel}\n//       />);\n//     }\n//     return <div>{ppbtn}</div>;\n//   }\n// }\n// Payments.propTypes = {\n//   currency: PropTypes.string.isRequired,\n//   total: PropTypes.number.isRequired,\n//   client: PropTypes.object.isRequired,\n// };\n// Payments.defaultProps = {\n//   env: 'sandbox',\n//   onSuccess: (payment) => {\n//     console.log('The payment was succeeded!', payment);\n//   },\n//   onCancel: (data) => {\n//     console.log('The payment was cancelled!', data);\n//   },\n//   onError: (err) => {\n//     console.log('Error loading Paypal script!', err);\n//   },\n// };\n//   constructor() {  \n//     super();\n//     this.state= {\n//       name: '',\n//     //   email: '',\n//     //   password: '',\n//     //   password2: '',  \n//     //   errors: {}\n//     };\n//     this.onChange = this.onChange.bind(this);\n//     this.onSubmit = this.onSubmit.bind(this);\n//   }\n//   componentWillReceiveProps(nextProps){\n//     if(nextProps.errors){\n//       this.setState({errors: nextProps.errors})\n//     }\n//   }\n//   onSubmit(e){\n//     e.preventDefault();\n//     const userPay = {\n//       name: this.state.name,      \n//     }; \n//     console.log(userPay); \n//     this.props.userPayments(userPay, this.props.history);\n//     }\n//   onChange(e){\n//     this.setState({ [e.target.name]: e.target.value});\n//   }\n//   render(){\n//     const { errors } = this.state;\n//     return (\n//       <div>\n//       <div className=\"container-fluid\">\n//           <div className=\"banner-section\">\n//               <div className=\"banner-title\">\n//                   <h1>Now, You can pay</h1>\n//               </div>\n//           </div>\n//       </div>\n//       <form>\n//       <TextFieldGroup\n//             placeholder=\"Name\"\n//             name=\"name\"\n//             type=\"name\"\n//             value={this.state.name}\n//             onChange={this.onChange}\n//             // error={errors.name}\n//             />\n//             <input type=\"submit\" className=\"btn btn-info\" />\n//       </form>\n//       </div>\n//     );\n//   }\n// } \n// Payments.propTypes = {\n//   userPayments: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired,\n//   errors: PropTypes.object.isRequired\n// };\n// const mapStateToProps = state => ({\n//   auth: state.auth,\n//   errors: state.errors\n// })\n//export default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(Payments);\n// export default connect(mapStateToProps, {userPayments})(withRouter(Payments));\n// import React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { userInfo } from 'os';\nimport { logoutUser } from '../../actions/authAction';\nimport { clearCurrentProfile } from '../../actions/profileActions';\nimport PayImage from '../../assets/image/btn_buynowCC_LG.gif';\n\nvar Payments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Payments, _Component);\n\n  function Payments() {\n    _classCallCheck(this, Payments);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Payments).apply(this, arguments));\n  }\n\n  _createClass(Payments, [{\n    key: \"render\",\n    value: function render() {\n      return (// <div>\n        //     <form>\n        //         <div className=\"btn\"><img src={PayImage} alt=\"paypal payment method\" /></div>\n        //     </form>\n        // </div>\n        React.createElement(StripeCheckout, {\n          name: \"Vivek\",\n          description: \"You can pay now\",\n          amount: 500,\n          token: function token(_token) {\n            return console.log(_token);\n          },\n          stripeKey: process.env.REACT_APP_STRIPE_KEY,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          herf: \"/success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, \" \", React.createElement(\"div\", {\n          className: \"btn  btn-info mt-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, \"Buy by Card\"), \" \"))\n      );\n    }\n  }]);\n\n  return Payments;\n}(Component);\n\nexport default Payments;","map":{"version":3,"sources":["/home/tech/Downloads/newCode/src/components/payments/Payments.js"],"names":["StripeCheckout","userInfo","logoutUser","clearCurrentProfile","PayImage","Payments","token","console","log","process","env","REACT_APP_STRIPE_KEY","Component"],"mappingscAAP,MAA2B,uBAA3B;AACA,SAASC,QAAT,QAAyB,IAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,mBAAT,QAAoC,8BAApC;AACA,OAAOC,QAAP,MAAsB,wCAAtB;;IAEMC,Q;;;;;;;;;;;;;6BACO;AAEL,aACI;AAEA;AAEA;AACA;AACA;AACA,4BAAC,cAAD;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,WAAW,EAAC,iBAFhB;AAGI,UAAA,MAAM,EAAE,GAHZ;AAII,UAAA,KAAK,EAAE,eAAAC,MAAK;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,WAJhB;AAKI,UAAA,SAAS,EAAEG,OAAO,CAACC,GAAR,CAAYC,oBAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOD;AAAG,UAAA,IAAI,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAoB;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAApB,MAPC;AARJ;AAkBH;;;;EArBkBC,S;;AAuBvB,eAAeP,QAAf","sourcesContent":["// import React, { Component, PropTypes } from 'react'\n// import ReactDOM from 'react-dom'\n// import { connect } from 'react-redux'\n// import {scriptLoader, paypal} from 'react-async-script-loader'\n\n// //import { paymentAuthorized, paymentCancelled } from '../../actions'\n\n// class PayPalButton extends Component {\n//   constructor(props) {\n//     super(props)\n//     window.React = React\n//     window.ReactDOM = ReactDOM\n//     this.state = {\n//       showButton: false,\n//     }\n//   }\n\n//   componentWillReceiveProps ({ isScriptLoaded, isScriptLoadSucceed }) {\n//     if (!this.state.show) {\n//       if (isScriptLoaded && !this.props.isScriptLoaded) { // load finished\n//         if (isScriptLoadSucceed) {\n//           this.setState({ showButton: true })\n//           console.log('alehop!!', window.paypal.Button.react)\n//         }\n//         else this.props.onError()\n//       }\n//     }\n//   }\n\n//   componentDidMount () {\n//     const { isScriptLoaded, isScriptLoadSucceed } = this.props\n//     if (isScriptLoaded && isScriptLoadSucceed) {\n//       this.setState({ showButton: true })\n//     }\n//   }\n\n//   componentWillUnmount() {\n//     delete window.React\n//     delete window.ReactDOM\n//   }\n\n//   render() {\n//     const client = {\n//       sandbox:    'xxxxxx',\n//       production: 'xxxxxx',\n//     }\n\n//     const payment = () => {\n//       return paypal.rest.payment.create('sandbox', client,\n//         {\n//           transactions: [\n//             { amount: { total: '1.00', currency: 'USD' } },\n//           ],\n//         },\n//       )\n//     }\n\n//     const onAuthorize = (data, actions) => {\n//       return actions.payment.execute().then(() => {\n//         console.log('The payment was completed!', this)\n//         this.setState({ showButton: false })\n//         const payment = Object.assign({}, this.props.payment)\n//         payment.paid = true\n//         payment.cancelled =  false\n//         payment.payerID =  data.payerID\n//         payment.paymentID =  data.paymentID\n//         payment.paymentToken =  data.paymentToken\n//         payment.returnUrl =  data.returnUrl\n//         this.props.dispatch(paymentAuthorized(payment))\n//       })\n//     }\n\n//     const onCancel = (data) => {\n//       console.log('The payment was cancelled!', data)\n//       this.props.dispatch(paymentCancelled())\n//     }\n\n//     return (\n//       <PayPalButton condition={this.state.showButton}>\n//         <paypal.Button.react\n//           env={'sandbox'}\n//           client={client}\n//           payment={payment}\n//           commit={true}\n//           onAuthorize={onAuthorize}\n//           onCancel={onCancel}\n//         />\n//       </PayPalButton>\n//     )\n//   }\n// }\n\n// const selector = (appState) => ({\n//   payment: appState.payment,\n// })\n\n// const PayPalButtonRedux = connect(selector)(PayPalButton)\n\n// export default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PayPalButtonRedux)\n\n// import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { userPayments } from '../../actions/authAction';  \n// import { withRouter } from 'react-router-dom';\n// import TextFieldGroup from '../common/TextFieldGroup';\n// import PayImage  from '../../assets/image/btn_buynowCC_LG.gif';\n// import {scriptLoader, paypal} from 'react-async-script-loader';\n\n// import ReactDOM from 'react-dom';\n// // import scriptLoader from 'react-async-script-loader';\n// // import PropTypes from 'prop-types';\n\n// class Payments extends Component {\n//   constructor(props) {\n//     super(props);\n//     window.React = React;\n//     window.ReactDOM = ReactDOM;\n//     this.state = {\n//       showButton: false,\n//       env: 'sandbox', // Or 'sandbox'\n//       client: {\n//          sandbox:    'vivekyadav264-facilitator@gmail.com', // sandbox client ID\n//          production: 'AQTxY9TnJ0Dc6kty0QYDBXlMn-k_Fxy9ppriWc-Ks1m3oLqGNgPN7KMwUW8bj2yahCol_embJa3jr87Q' // production client ID\n//         //'client_id': 'AfPa2JGqfMYIwoEvB2hFHqNCRiwT8-1SUbQGXT9PxH4Cf5gm4c6ms0GZnpBtckmv3dgsN_-OVPZt0U2i',\n//         //'client_secret': 'EA49HIg-l9pyL0n-GSNTnpmxTF94ynfqrt3-xROKJ5DaOdL880Vpoii8I4_EMHGF_JdBvQAWuxYnMTNk'\n//       },\n//       commit: true, // Show a 'Pay Now' button\n//     };\n//   }\n//   componentDidMount() {\n//     const { isScriptLoaded, isScriptLoadSucceed } = this.props;\n//     if (isScriptLoaded && isScriptLoadSucceed) {\n//       this.setState({ showButton: true });\n//     }\n//   }\n//   componentWillReceiveProps({ isScriptLoaded, isScriptLoadSucceed }) {\n//     if (!this.state.show) {\n//       if (isScriptLoaded && !this.props.isScriptLoaded) {\n//         if (isScriptLoadSucceed) {\n//           this.setState({ showButton: true });\n//         } else {\n//           console.log('Cannot load Paypal script!');\n//           this.props.onError();\n//         }\n//       }\n//     }\n//   }\n \n//   render() {\n//     const payment = () => paypal.rest.payment.create(this.props.env, this.props.client, {\n//       transactions: [\n//                     { amount: { total: this.props.total, currency: this.props.currency } },\n//       ],\n//     });\n \n//     const onAuthorize = (data, actions) => actions.payment.execute().then(() => {\n//       const payment = Object.assign({}, this.props.payment);\n//       payment.paid = true;\n//       payment.cancelled = false;\n//       payment.payerID = data.payerID;\n//       payment.paymentID = data.paymentID;\n//       payment.paymentToken = data.paymentToken;\n//       payment.returnUrl = data.returnUrl;\n//       this.props.onSuccess(payment);\n//     });\n \n//     let ppbtn = '';\n//     if (this.state.showButton) {\n//       ppbtn = (<paypal.Button.react\n//         env={this.state.env}\n//         client={this.state.client}\n//         payment={payment}\n//         commit\n//         onAuthorize={onAuthorize}\n//         onCancel={this.props.onCancel}\n//       />);\n//     }\n//     return <div>{ppbtn}</div>;\n//   }\n// }\n \n// Payments.propTypes = {\n//   currency: PropTypes.string.isRequired,\n//   total: PropTypes.number.isRequired,\n//   client: PropTypes.object.isRequired,\n// };\n \n// Payments.defaultProps = {\n//   env: 'sandbox',\n//   onSuccess: (payment) => {\n//     console.log('The payment was succeeded!', payment);\n//   },\n//   onCancel: (data) => {\n//     console.log('The payment was cancelled!', data);\n//   },\n//   onError: (err) => {\n//     console.log('Error loading Paypal script!', err);\n//   },\n// };\n//   constructor() {  \n//     super();\n//     this.state= {\n//       name: '',\n//     //   email: '',\n//     //   password: '',\n//     //   password2: '',  \n//     //   errors: {}\n//     };\n//     this.onChange = this.onChange.bind(this);\n//     this.onSubmit = this.onSubmit.bind(this);\n//   }\n//   componentWillReceiveProps(nextProps){\n//     if(nextProps.errors){\n//       this.setState({errors: nextProps.errors})\n//     }\n//   }\n//   onSubmit(e){\n//     e.preventDefault();\n//     const userPay = {\n//       name: this.state.name,      \n//     }; \n//     console.log(userPay); \n//     this.props.userPayments(userPay, this.props.history);\n   \n//     }\n//   onChange(e){\n//     this.setState({ [e.target.name]: e.target.value});\n//   }\n//   render(){\n//     const { errors } = this.state;\n\n//     return (\n//       <div>\n//       <div className=\"container-fluid\">\n//           <div className=\"banner-section\">\n//               <div className=\"banner-title\">\n//                   <h1>Now, You can pay</h1>\n//               </div>\n//           </div>\n\n//       </div>\n//       <form>\n//       <TextFieldGroup\n//             placeholder=\"Name\"\n//             name=\"name\"\n//             type=\"name\"\n//             value={this.state.name}\n//             onChange={this.onChange}\n//             // error={errors.name}\n//             />\n//             <input type=\"submit\" className=\"btn btn-info\" />\n//       </form>\n      \n//       </div>\n//     );\n//   }\n// } \n// Payments.propTypes = {\n//   userPayments: PropTypes.func.isRequired,\n//   auth: PropTypes.object.isRequired,\n//   errors: PropTypes.object.isRequired\n// };\n\n// const mapStateToProps = state => ({\n//   auth: state.auth,\n//   errors: state.errors\n// })\n\n//export default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(Payments);\n// export default connect(mapStateToProps, {userPayments})(withRouter(Payments));\n\n// import React, { Component } from 'react';\n\nimport StripeCheckout from 'react-stripe-checkout';\nimport { userInfo } from 'os';\nimport { logoutUser } from '../../actions/authAction';\nimport { clearCurrentProfile } from '../../actions/profileActions';\nimport PayImage  from '../../assets/image/btn_buynowCC_LG.gif';\n\nclass Payments extends Component {\n    render() {\n       \n        return(\n            // <div>\n            \n            //     <form>\n                    \n            //         <div className=\"btn\"><img src={PayImage} alt=\"paypal payment method\" /></div>\n            //     </form>\n            // </div>\n            <StripeCheckout\n                name=\"Vivek\"\n                description=\"You can pay now\"\n                amount={500}\n                token={token => console.log(token)}\n                stripeKey={process.env.REACT_APP_STRIPE_KEY}\n            >\n           <a herf=\"/success\"> <div className=\"btn  btn-info mt-4\">Buy by Card</div> </a> \n            </StripeCheckout>\n        )\n    }\n}\nexport default Payments;"]},"metadata":{},"sourceType":"module"}